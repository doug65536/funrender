#!/bin/bash

MKFILE=config.mk

[[ -z $CXX ]] && CXX=c++

declare -a captured_vars=(
    CC
    CFLAGS
    CXX
    CXXFLAGS
    CPP
    CPPFLAGS
    LD
    LDFLAGS
    LD_LIBRARY_PATH
    RM
    LN
    PKG_CONFIG
    PKG_CONFIG_PATH
    OBJDUMP
    OBJCOPY
    RANLIB
    AR
    LLVM_COV
    LLVM_PROFDATA
    GCOV
    GPROF
)

declare -a checked_cxx_headers=(
    cstdlib
    cstring
    cstdint
    cassert
    cmath
    fcntl.h
    unistd.h
    chrono
    array
    fstream
    algorithm
    atomic
    list
    functional
    map
    unordered_map
    memory
    iterator
    iostream
    iomanip
    vector
    type_traits
    pthread.h
    thread
    condition_variable
    mutex
    glm/glm.hpp
)

if [[ $PLATFORM == "WIN32" ]]; then
    checked_cxx_headers+=("windows.h")
fi

echo '### This file is automatically generated by `configure`' > "$MKFILE"
for name in ${captured_vars[@]}; do
    value=${!name}
    if [[ -n "$value" ]]; then
        echo "$name=$value" >> "$MKFILE"
    fi
done

for name in ${checked_cxx_headers[@]}; do
    echo -n "Checking #include <$name>..."
    $CXX $CXXFLAGS -x c++ -c <(echo "#include <$name>") \
        -o /dev/null >> build.log
    if [[ $? -eq 0 ]]; then
        echo ok
    else
        echo failed
        exit 1
    fi
done

echo "Generated $MKFILE"
